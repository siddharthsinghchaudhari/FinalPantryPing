{"ast":null,"code":"var _jsxFileName = \"/home/sidharth/Desktop/pantry_ping/pantry_ping_main/frontend/src/components/ResetPassword.jsx\",\n  _s = $RefreshSig$();\n// import coffeeCup from \"../assets/login-cup.jpeg\";\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import \"./ResetPassword.css\";\n\n// const ResetPassword = () => {\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [message, setMessage] = useState('');\n//   const { token } = useParams();\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       setMessage(\"Passwords do not match\");\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n//       setMessage(response.data.message);\n//       navigate('/login');\n//     } catch (error) {\n//       console.error('Error resetting password:', error);\n//       setMessage('An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"outer-container\">\n//       <div className=\"container\">\n//         <div className=\"left-container\">\n//           <img className=\"resetPasswordImg\" src={coffeeCup} alt=\"Cup of Coffee\" />\n//         </div>\n//         <div className=\"right-outer-container\">\n//           <div className=\"right-inner-container\">\n//             <div className=\"top-details\">\n//               <p className=\"heading\">Reset Password</p>\n//               <p className=\"desc\">Enter your new password</p>\n//             </div>\n\n//             <form className=\"form\" onSubmit={handleSubmit}>\n//               <div className=\"details-container\">\n//                 <label htmlFor=\"password\">New Password</label>\n//                 <input\n//                   type=\"password\"\n//                   id=\"password\"\n//                   name=\"password\"\n//                   required\n//                   className=\"form-input\"\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"details-container\">\n//                 <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n//                 <input\n//                   type=\"password\"\n//                   id=\"confirmPassword\"\n//                   name=\"confirmPassword\"\n//                   required\n//                   className=\"form-input\"\n//                   value={confirmPassword}\n//                   onChange={(e) => setConfirmPassword(e.target.value)}\n//                 />\n//               </div>\n\n//               <button type=\"submit\" className=\"btn reset-password-btn\">Reset Password</button>\n//             </form>\n//             {message && <p className=\"message\">{message}</p>}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    token\n  } = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/reset-password/${token}`, {\n        password\n      });\n      setMessage(response.data.message);\n      navigate('/login');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error resetting password:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"+4UFtDlqHxfBqOjtt4bjZgOtnAQ=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","message","setMessage","token","handleSubmit","e","preventDefault","response","post","data","navigate","_error$response","_error$response$data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/sidharth/Desktop/pantry_ping/pantry_ping_main/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["\n// import coffeeCup from \"../assets/login-cup.jpeg\";\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useParams } from 'react-router-dom';\n// import \"./ResetPassword.css\";\n\n// const ResetPassword = () => {\n  //   const [password, setPassword] = useState('');\n  //   const [confirmPassword, setConfirmPassword] = useState('');\n  //   const [message, setMessage] = useState('');\n  //   const { token } = useParams();\n  //   const navigate = useNavigate();\n  \n  //   const handleSubmit = async (e) => {\n    //     e.preventDefault();\n    //     if (password !== confirmPassword) {\n      //       setMessage(\"Passwords do not match\");\n      //       return;\n      //     }\n      \n      //     try {\n        //       const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n        //       setMessage(response.data.message);\n        //       navigate('/login');\n        //     } catch (error) {\n          //       console.error('Error resetting password:', error);\n          //       setMessage('An error occurred. Please try again.');\n          //     }\n          //   };\n          \n          //   return (\n            //     <div className=\"outer-container\">\n            //       <div className=\"container\">\n            //         <div className=\"left-container\">\n            //           <img className=\"resetPasswordImg\" src={coffeeCup} alt=\"Cup of Coffee\" />\n            //         </div>\n            //         <div className=\"right-outer-container\">\n            //           <div className=\"right-inner-container\">\n            //             <div className=\"top-details\">\n            //               <p className=\"heading\">Reset Password</p>\n            //               <p className=\"desc\">Enter your new password</p>\n            //             </div>\n            \n            //             <form className=\"form\" onSubmit={handleSubmit}>\n            //               <div className=\"details-container\">\n            //                 <label htmlFor=\"password\">New Password</label>\n            //                 <input\n            //                   type=\"password\"\n            //                   id=\"password\"\n            //                   name=\"password\"\n            //                   required\n            //                   className=\"form-input\"\n            //                   value={password}\n            //                   onChange={(e) => setPassword(e.target.value)}\n            //                 />\n            //               </div>\n            //               <div className=\"details-container\">\n            //                 <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n            //                 <input\n            //                   type=\"password\"\n            //                   id=\"confirmPassword\"\n            //                   name=\"confirmPassword\"\n            //                   required\n            //                   className=\"form-input\"\n            //                   value={confirmPassword}\n            //                   onChange={(e) => setConfirmPassword(e.target.value)}\n            //                 />\n            //               </div>\n            \n//               <button type=\"submit\" className=\"btn reset-password-btn\">Reset Password</button>\n//             </form>\n//             {message && <p className=\"message\">{message}</p>}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const { token } = useParams();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n      setMessage(response.data.message);\n      navigate('/login');\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setError(error.response?.data?.message || 'An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Reset Password</h1>\n      {message && <p>{message}</p>}\n      {error && <p>{error}</p>}\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          placeholder=\"New Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n        <button type=\"submit\">Reset Password</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}