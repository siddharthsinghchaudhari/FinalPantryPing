{"ast":null,"code":"var _jsxFileName = \"/home/sidharth/Desktop/pantry_ping/pantry_ping_main/frontend/src/components/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport coffeeCup from \"../assets/login-cup.jpeg\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport \"./ResetPassword.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:5000/reset-password/${token}`, {\n        password\n      });\n      setMessage(response.data.message);\n      navigate('/login');\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"resetPasswordImg\",\n          src: coffeeCup,\n          alt: \"Cup of Coffee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-outer-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-inner-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"heading\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"desc\",\n              children: \"Enter your new password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                name: \"password\",\n                required: true,\n                className: \"form-input\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"details-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirmPassword\",\n                children: \"Confirm New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"confirmPassword\",\n                name: \"confirmPassword\",\n                required: true,\n                className: \"form-input\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn reset-password-btn\",\n              children: \"Reset Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }, this);\n};\n_s(ResetPassword, \"fFF5tyYU/kDFJE/edzhLi9C4I/U=\", true, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n\n// const ResetPassword = () => {\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const { token } = useParams();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       setError('Passwords do not match');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n//       setMessage(response.data.message);\n//       navigate('/login');\n//     } catch (error) {\n//       console.error('Error resetting password:', error);\n//       setError(error.response?.data?.message || 'An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Reset Password</h1>\n//       {message && <p>{message}</p>}\n//       {error && <p>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"password\"\n//           placeholder=\"New Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Confirm Password\"\n//           value={confirmPassword}\n//           onChange={(e) => setConfirmPassword(e.target.value)}\n//         />\n//         <button type=\"submit\">Reset Password</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["coffeeCup","React","useState","axios","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","token","navigate","useNavigate","handleSubmit","e","preventDefault","response","post","data","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","required","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/sidharth/Desktop/pantry_ping/pantry_ping_main/frontend/src/components/ResetPassword.jsx"],"sourcesContent":["\nimport coffeeCup from \"../assets/login-cup.jpeg\";\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport \"./ResetPassword.css\";\n\nconst ResetPassword = () => {\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const { token } = useParams();\n    const navigate = useNavigate();\n  \n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords do not match\");\n            return;\n          }\n      \n          try {\n              const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n              setMessage(response.data.message);\n              navigate('/login');\n            } catch (error) {\n                console.error('Error resetting password:', error);\n                setMessage('An error occurred. Please try again.');\n              }\n            };\n          \n            return (\n                <div className=\"outer-container\">\n                  <div className=\"container\">\n                    <div className=\"left-container\">\n                      <img className=\"resetPasswordImg\" src={coffeeCup} alt=\"Cup of Coffee\" />\n                    </div>\n                    <div className=\"right-outer-container\">\n                      <div className=\"right-inner-container\">\n                        <div className=\"top-details\">\n                          <p className=\"heading\">Reset Password</p>\n                          <p className=\"desc\">Enter your new password</p>\n                        </div>\n            \n                        <form className=\"form\" onSubmit={handleSubmit}>\n                          <div className=\"details-container\">\n                            <label htmlFor=\"password\">New Password</label>\n                            <input\n                              type=\"password\"\n                              id=\"password\"\n                              name=\"password\"\n                              required\n                              className=\"form-input\"\n                              value={password}\n                              onChange={(e) => setPassword(e.target.value)}\n                            />\n                          </div>\n                          <div className=\"details-container\">\n                            <label htmlFor=\"confirmPassword\">Confirm New Password</label>\n                            <input\n                              type=\"password\"\n                              id=\"confirmPassword\"\n                              name=\"confirmPassword\"\n                              required\n                              className=\"form-input\"\n                              value={confirmPassword}\n                              onChange={(e) => setConfirmPassword(e.target.value)}\n                            />\n                          </div>\n            \n              <button type=\"submit\" className=\"btn reset-password-btn\">Reset Password</button>\n            </form>\n            {message && <p className=\"message\">{message}</p>}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n\n// const ResetPassword = () => {\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [message, setMessage] = useState('');\n//   const { token } = useParams();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (password !== confirmPassword) {\n//       setError('Passwords do not match');\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(`http://localhost:5000/reset-password/${token}`, { password });\n//       setMessage(response.data.message);\n//       navigate('/login');\n//     } catch (error) {\n//       console.error('Error resetting password:', error);\n//       setError(error.response?.data?.message || 'An error occurred. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Reset Password</h1>\n//       {message && <p>{message}</p>}\n//       {error && <p>{error}</p>}\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"password\"\n//           placeholder=\"New Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Confirm Password\"\n//           value={confirmPassword}\n//           onChange={(e) => setConfirmPassword(e.target.value)}\n//         />\n//         <button type=\"submit\">Reset Password</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}